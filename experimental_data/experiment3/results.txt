ece65c1a428094b1c6c17de3d7593f64e1bb1286 (CVE-2011-1088):
GT:
method extraction (processServletSecurityAnnotation)
add setter (setServletSecurityAnnotationScanRequired)
variable set (processServletSecurityAnnotation)
DETECTED:
method extraction (processServletSecurityAnnotation)
add setter (setServletSecurityAnnotationScanRequired)
variable set (processServletSecurityAnnotation)
RESULT:
3/3

008447095ce8c3a8f713093d5e618f3f06f94ea8 (CVE-2011-0534):
GT:
variable set (InternalNioInputBuffer)
variable set (parseRequestLine)
variable set (setSocket)
DETECTED:
variable set (setSocket)
variable set (parseRequestLine)
RESULT:
2/3

3e1010b1a2f648581fac3d68afbf18f2979f6bf6 (CVE-2009-2901, CVE-2009-2902, CVE-2009-2693):
GT:
variable set (setWorkDir)
method extraction (expand(InputStream input, File file))
method extraction (delete(File dir, boolean logFailure))
method extraction (deleteDir(File dir, boolean logFailure))
method call API change (stop)
DETECTED:
RESULT:
0/5

b7b5c63a932f6c1ea05f9b65ad9054247bb5af57 (CVE-2011-1183):
GT:
add getter (getPreemptiveAuthentication)
add setter (setPreemptiveAuthentication)
DETECTED:
add setter (setPreemptiveAuthentication)
RESULT:
2/2

512a3c3aecdb52de092c6bacddd71b85c4feda06 (CVE-2017-12617):
GT:
method call API change (FileDirContext.file(String name, boolean mustExist))
method call API change (VirtualDirContext.getAttributes(String name)) (f = validate(f, name, true, resourcesDir);)
method call API change (VirtualDirContext.getAttributes(String name)) (f = validate(f, res, true, resourcesDir);)
method call API change (VirtualDirContext.file(String name, boolean mustExist)) (f = validate(f, name, true, resourcesDir);)
method call API change (VirtualDirContext.file(String name, boolean mustExist)) (f = validate(f, res, true, resourcesDir);)
method call API change (VirtualDirContext.list(File file)) (f = validate(f, res, true, resourcesDir);)
method call API change (VirtualDirContext.doLookup(String name)) (f = validate(f, name, true, resourcesDir);)
method call API change (VirtualDirContext.doLookup(String name)) (f = validate(f, res, true, resourcesDir);)
DETECTED:
method call API change (FileDirContext.file(String name, boolean mustExist))
method call API change (VirtualDirContext.getAttributes(String name)) (f = validate(f, name, true, resourcesDir);)
method call API change (VirtualDirContext.getAttributes(String name)) (f = validate(f, res, true, resourcesDir);)
method call API change (VirtualDirContext.file(String name, boolean mustExist)) (f = validate(f, name, true, resourcesDir);)
method call API change (VirtualDirContext.file(String name, boolean mustExist)) (f = validate(f, res, true, resourcesDir);)
method call API change (VirtualDirContext.list(File file)) (f = validate(f, res, true, resourcesDir);)
method call API change (VirtualDirContext.doLookup(String name)) (f = validate(f, name, true, resourcesDir);)
method call API change (VirtualDirContext.doLookup(String name)) (f = validate(f, res, true, resourcesDir);)
RESULT:
8/8

40e5880dfc51517334acda5f12beacdec52ca283 (CVE-2010-2227):
GT:
variable set (initializeFilters)
DETECTED:
variable set (initializeFilters)
RESULT:
1/1

(tomcat55)4faaca9353e5e3f963c7a674b3ac6a0bd1c3757e (CVE-2010-2227):
GT:
variable set (Http11AprProcessor.initializeFilters)
variable set (Http11Processor.initializeFilters)
DETECTED:
variable set (Http11AprProcessor.initializeFilters)
variable set (Http11Processor.initializeFilters)
RESULT:
2/2

b8cb9f5f91e9210ca107fd80f3e6acd47531daa7 (CVE-2013-4322):
GT:
variable set (ChunkedInputFilter(int maxTrailerSize, int maxExtensionSize))
DETECTED:
variable set (ChunkedInputFilter(int maxTrailerSize, int maxExtensionSize))
RESULT:
1/1

d6a9898125f34e593de426e8c7dabb0f224fc00f (CVE-2013-4322):
GT:
method call API change (AbstractHttp11Processor.initializeFilters(int maxTrailerSize, int maxExtensionSize))
add getter (AbstractHttp11Protocol.getMaxExtensionSize)
add setter (AbstractHttp11Protocol.setMaxExtensionSize)
method call API change (Http11AprProcessor(int headerBufferSize, AprEndpoint endpoint, int maxTrailerSize, int maxExtensionSize))
method call API change (Http11AprProtocol.createProcessor())
method call API change (Http11NioProcessor(int maxHttpHeaderSize, NioEndpoint endpoint, int maxTrailerSize, int maxExtensionSize))
method call API change (Http11NioProtocol.createProcessor())
method call API change (Http11Processor(int headerBufferSize, JIoEndpoint endpoint, int maxTrailerSize, int maxExtensionSize))
method call API change (Http11Protocol.createProcessor())
variable set (ChunkedInputFilter(int maxTrailerSize, int maxExtensionSize))
variable set (ChunkedInputFilter.recycle())
DETECTED:
variable set (ChunkedInputFilter.recycle())
variable set (ChunkedInputFilter(int maxTrailerSize, int maxExtensionSize))
add getter (AbstractHttp11Protocol.getMaxExtensionSize)
add setter (AbstractHttp11Protocol.setMaxExtensionSize)
method call API change (Http11AprProcessor(int headerBufferSize, AprEndpoint endpoint, int maxTrailerSize, int maxExtensionSize))
method call API change (Http11AprProtocol.createProcessor())
method call API change (Http11NioProcessor(int maxHttpHeaderSize, NioEndpoint endpoint, int maxTrailerSize, int maxExtensionSize))
method call API change (Http11NioProtocol.createProcessor())
method call API change (Http11Processor(int headerBufferSize, JIoEndpoint endpoint, int maxTrailerSize, int maxExtensionSize))
method call API change (Http11Protocol.createProcessor())
RESULT:
10/11

todo: probably delete ------------------------------
05c84ff8304a69a30b251f207a7b93c2c882564d (CVE-2013-4590):
GT:
method call API change (java/org/apache/catalina/ant/ValidatorTask.execute())
add setter (<org.apache.catalina.core.StandardContext: void setXmlBlockExternal(boolean)>)
add getter (<org.apache.catalina.core.StandardContext: boolean getXmlBlockExternal()>)
method call API change (<org.apache.catalina.startup.ContextConfig: void createWebXmlDigester(boolean,boolean)>)
method call API change (<org.apache.catalina.startup.ContextConfig: void createWebXmlDigester(boolean,boolean)>)
method call API change (<org.apache.catalina.startup.TldConfig: org.apache.tomcat.util.digester.Digester createTldDigester(boolean)>)
method call API change (<org.apache.catalina.startup.TldConfig: org.apache.tomcat.util.digester.Digester createTldDigester(boolean)>)
method call API change (<org.apache.catalina.startup.TldConfig: void init()>)
add setter (org.apache.jasper.JspC: void setBlockExternal(boolean) )
add getter (org.apache.jasper.JspC: boolean isBlockExternal() )
method call API change (<org.apache.jasper.compiler.ImplicitTagLibraryInfo: void <init>(org.apache.jasper.JspCompilationContext,org.apache.jasper.compiler.ParserController,org.apache.jasper.compiler.PageInfo,java.lang.String,java.lang.String,org.apache.jasper.compiler.ErrorDispatcher)>
method call API change (<org.apache.jasper.compiler.JspConfig: void processWebDotXml()>)
variable set (<org.apache.jasper.compiler.JspDocumentParser: void <init>(org.apache.jasper.compiler.ParserController,java.lang.String,boolean,boolean)>)
method call API change (<org.apache.jasper.compiler.TagLibraryInfoImpl: void parseTLD(java.lang.String,java.io.InputStream,org.apache.jasper.compiler.JarResource)>)
method call API change (<org.apache.jasper.compiler.TagPluginManager: void loadTagPlugins(org.apache.jasper.compiler.ErrorDispatcher,java.io.InputStream)>)
method call API change (<org.apache.jasper.compiler.TldLocationsCache: void tldScanWebXml())
method call API change (<org.apache.jasper.compiler.TldLocationsCache: void tldScanStream(java.lang.String,java.lang.String,java.io.InputStream)>)
variable set (<org.apache.jasper.xmlparser.ParserUtils: void <init>(boolean,boolean)>',)
variable set (<org.apache.jasper.xmlparser.ParserUtils: void <init>(boolean,boolean)>',)
variable set (org.apache.tomcat.util.descriptor.LocalResolver: void init(java.util.Map,java.util.Map,boolean))
method call API change (<org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser: void <init>(javax.servlet.ServletContext)>)
method call API change (TldParser(boolean namespaceAware, boolean validation, boolean blockExternal))
method call API change (TldParser(boolean namespaceAware, boolean validation, RuleSet ruleSet, boolean blockExternal))
method call API change (WebXmlParser(boolean namespaceAware, boolean validation, boolean blockExternal))
method call API change (WebXmlParser(boolean namespaceAware, boolean validation, boolean blockExternal))
DETECTED:
add setter (org.apache.jasper.JspC: void setBlockExternal(boolean) )
variable set (org.apache.tomcat.util.descriptor.LocalResolver: void init(java.util.Map,java.util.Map,boolean))
variable set (<org.apache.jasper.compiler.JspDocumentParser: void <init>(org.apache.jasper.compiler.ParserController,java.lang.String,boolean,boolean)>)
add setter (<org.apache.catalina.core.StandardContext: void setXmlBlockExternal(boolean)>)
add getter (<org.apache.catalina.core.StandardContext: boolean getXmlBlockExternal()>)
add getter (org.apache.jasper.JspC: boolean isBlockExternal() )
RESULT:
6/25

593a2447e6ebe465585cfa07e93b5635dffa1c70 (CVE-2014-0227):
GT:
variable set (recycle())
DETECTED:
variable set (recycle())
RESULT:
1/1

e28dd578fad90a6d5726ec34f3245c9f99d909a5 (CVE-2014-0230):
GT:
method call API change (java/org/apache/coyote/http11/AbstractHttp11Processor.java.initializeFilters(int maxTrailerSize, int maxExtensionSize, int maxSwallowSize)) (new IdentityInputFilter(maxSwallowSize))
method call API change (java/org/apache/coyote/http11/AbstractHttp11Processor.java.initializeFilters(int maxTrailerSize, int maxExtensionSize, int maxSwallowSize)) (new ChunkedInputFilter(maxTrailerSize, maxExtensionSize, maxSwallowSize))
add getter (AbstractHttp11Protocol.getMaxSwallowSize)
add setter (AbstractHttp11Protocol.setMaxSwallowSize)
method call API change (Http11AprProcessor(int headerBufferSize, AprEndpoint endpoint, int maxTrailerSize, int maxExtensionSize, int maxSwallowSize))
method call API change (Http11AprProtocol.createProcessor())
method call API change (Http11Nio2Processor(...))
method call API change (Http11Nio2Protocol.createProcessor())
method call API change (Http11NioProcessor(...))
method call API change (Http11NioProtocol.createProcessor())
method call API change (Http11Processor(...))
method call API change (Http11Protocol.createProcessor())
variable set (ChunkedInputFilter(int maxTrailerSize, int maxExtensionSize, int maxSwallowSize))
variable set (IdentityInputFilter(int maxSwallowSize))
DETECTED:
variable set (ChunkedInputFilter(int maxTrailerSize, int maxExtensionSize, int maxSwallowSize))
add getter (AbstractHttp11Protocol.getMaxSwallowSize)
add setter (AbstractHttp11Protocol.setMaxSwallowSize)
method call API change (Http11AprProcessor(int headerBufferSize, AprEndpoint endpoint, int maxTrailerSize, int maxExtensionSize, int maxSwallowSize))
method call API change (Http11AprProtocol.createProcessor())
method call API change (Http11Processor(...))
method call API change (Http11Protocol.createProcessor())
method call API change (Http11NioProcessor(...))
method call API change (Http11NioProtocol.createProcessor())
method call API change (Http11Nio2Processor(...))
method call API change (Http11Nio2Protocol.createProcessor())
RESULT:
11/14


(tomcat55)0314fe7743cb72e469cb395ccaaf2793a2ea0355 (CVE-2012-0022)

 (CVE-2015-5345):
